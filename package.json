{
  "name": "ProjectM",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "mocha": "mocha ./tests/**/test*.js",
    "lint": "jshint . --show-non-errors",
    "test": "echo \">> Check NPM packages security\n>>> nsp\" && nsp check && echo \">>> snyk\" && snyk test && echo \">> mocha\" && npm run mocha && echo \">> JSHint\" && npm run lint",
    "install": "echo \"> npm update\" && npm update && npm run update",
    "update": "echo \"> bower install\" && ./node_modules/.bin/bower install && echo \"> bower update\" && ./node_modules/.bin/bower update",
    "start": "pm2 startOrReload ecosystem.config.js",
    "deploy": "./node_modules/.bin/pm2 deploy production",
    "gen-api-doc": "apidoc -i ./api -o ../documents/api",
    "mkdb": "./bin/mkdb",
    "mkdb-new": "./bin/mkdb-new",
    "dummy-inserts": "./bin/dummy-inserts.js",
    "dball": "(mysqldump -u $(echo $(cat .env | grep DB_USER | cut -d'=' -f2)) -p$(echo $(cat .env | grep DB_PASS | cut -d'=' -f2)) $(echo $(cat .env | grep DB_NAME | cut -d'=' -f2)) points --no-create-info --insert-ignore > .points.sql); DBCONFIG=$(./bin/printDBNameUsernamePassword.js) && (echo -e \"$DBCONFIG\" \"\nY\n\" | npm run mkdb -- remake | (grep Error || exit 0)) && (npm run dummy-inserts) && (redis-cli -a $(echo $(cat .env | grep REDIS_PASSWORD | cut -d'=' -f2)) --raw flushall) && (mysql -u $(echo $(cat .env | grep DB_USER | cut -d'=' -f2)) -p$(echo $(cat .env | grep DB_PASS | cut -d'=' -f2)) $(echo $(cat .env | grep DB_NAME | cut -d'=' -f2)) < .points.sql) && (rm .points.sql);",
    "dball-production": "(pm2 reload ecosystem.config.js --env development) && (npm run dball) && (pm2 reload ecosystem.config.js --env production)"
  },
  "apidoc": {
    "name": "ProjectM",
    "title": "ProjectM API",
    "url": "http://mapcode.ir/api",
    "description": "All requests should be in format of JSON and so all requests should have HEADER Content-Type: application/json <br /> Status code 500: there is a server error. <br /> For private and signedin requests set this header with user's token: Authorization: Bearer [token]"
  },
  "devDependencies": {
    "apidoc": "latest",
    "jshint": "latest",
    "mocha": "latest",
    "nsp": "latest",
    "pm2": "^2.5.0",
    "snyk": "latest"
  },
  "dependencies": {
    "2972.ir": "^1.0.0",
    "async": "^2.3.0",
    "bcryptjs": "latest",
    "body-parser": "^1.17.1",
    "bower": "latest",
    "chai": "^3.5.0",
    "chai-http": "^3.0.0",
    "cookie-parser": "~1.4.3",
    "debug": "~2.6.3",
    "dotenv": "^4.0.0",
    "express": "^4.15.2",
    "express-jwt": "^5.1.0",
    "express-validator": "^3.1.3",
    "glob": "^7.1.2",
    "hashids": "^1.1.1",
    "helmet": "^3.5.0",
    "jsonwebtoken": "^7.3.0",
    "lodash": "^4.17.4",
    "mkdirp": "^0.5.1",
    "moment": "^2.18.1",
    "multer": "^1.3.0",
    "mustache": "^2.3.0",
    "mysql": "^2.13.0",
    "randomstring": "^1.1.5",
    "redis": "^2.7.1",
    "request": "^2.81.0"
  }
}
